/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

__attribute__ ((naked)) void SVC_Handler(void)
{
	//Getting MSP base address stack frame base
	__asm volatile ("MRS R0,MSP");
	__asm volatile ("B SVCHandler_C");

}
void SVCHandler_C(uint32_t* cop_pu32StackFrameBase) // compiler will automatically pass MSP to R0
{
	uint8_t Local_u8SVCnumber;
	// +6 from MSP will get the PC
	uint8_t* local_pu8ReturnAddress = cop_pu32StackFrameBase[6];
	//the  ("MRS R0,MSP") will be in PC -2
	local_pu8ReturnAddress-=2;
	// dereference this add and get 1st byte

}
#include <stdint.h>

int main(void)
{
	__asm volatile ("SVC #5");
    /* Loop forever */
	for(;;);
}
