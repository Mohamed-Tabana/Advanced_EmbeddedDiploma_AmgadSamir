
NVIC_F103.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001ec  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800031c  08000324  00010324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800031c  0800031c  00010324  2**0
                  CONTENTS
  4 .ARM          00000000  0800031c  0800031c  00010324  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800031c  08000324  00010324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800031c  0800031c  0001031c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000320  08000320  00010320  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010324  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  20000000  08000324  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  08000324  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00010324  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000af3  00000000  00000000  0001034d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000309  00000000  00000000  00010e40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000108  00000000  00000000  00011150  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000d0  00000000  00000000  00011258  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000728  00000000  00000000  00011328  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013d5  00000000  00000000  00011a50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000873d  00000000  00000000  00012e25  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001b562  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000300  00000000  00000000  0001b5b4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	08000304 	.word	0x08000304

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	08000304 	.word	0x08000304

08000170 <NVIC_vEnableInterrupt>:
#include "NVIC_int.h"

#include "Utils.h"

void NVIC_vEnableInterrupt(Interrupt_t copy_eInterrupt)
{
 8000170:	b480      	push	{r7}
 8000172:	b083      	sub	sp, #12
 8000174:	af00      	add	r7, sp, #0
 8000176:	4603      	mov	r3, r0
 8000178:	71fb      	strb	r3, [r7, #7]
	NVIC->NVIC_ISER[copy_eInterrupt/32]= 0b1 << copy_eInterrupt % 32 ;
 800017a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800017e:	425a      	negs	r2, r3
 8000180:	f003 031f 	and.w	r3, r3, #31
 8000184:	f002 021f 	and.w	r2, r2, #31
 8000188:	bf58      	it	pl
 800018a:	4253      	negpl	r3, r2
 800018c:	b25b      	sxtb	r3, r3
 800018e:	461a      	mov	r2, r3
 8000190:	2301      	movs	r3, #1
 8000192:	fa03 f102 	lsl.w	r1, r3, r2
 8000196:	4a07      	ldr	r2, [pc, #28]	; (80001b4 <NVIC_vEnableInterrupt+0x44>)
 8000198:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800019c:	2b00      	cmp	r3, #0
 800019e:	da00      	bge.n	80001a2 <NVIC_vEnableInterrupt+0x32>
 80001a0:	331f      	adds	r3, #31
 80001a2:	115b      	asrs	r3, r3, #5
 80001a4:	b25b      	sxtb	r3, r3
 80001a6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 80001aa:	bf00      	nop
 80001ac:	370c      	adds	r7, #12
 80001ae:	46bd      	mov	sp, r7
 80001b0:	bc80      	pop	{r7}
 80001b2:	4770      	bx	lr
 80001b4:	e000e100 	.word	0xe000e100

080001b8 <NVIC_vSetPendingFlag>:
void NVIC_vDisableInterrupt(Interrupt_t copy_eInterrupt)
{
	NVIC->NVIC_ICER[copy_eInterrupt/32]= 0b1 << copy_eInterrupt % 32 ;
}
void NVIC_vSetPendingFlag(Interrupt_t copy_eInterrupt)
{
 80001b8:	b480      	push	{r7}
 80001ba:	b083      	sub	sp, #12
 80001bc:	af00      	add	r7, sp, #0
 80001be:	4603      	mov	r3, r0
 80001c0:	71fb      	strb	r3, [r7, #7]
	NVIC->NVIC_ISPR[copy_eInterrupt/32]= 0b1 << copy_eInterrupt % 32 ;
 80001c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001c6:	425a      	negs	r2, r3
 80001c8:	f003 031f 	and.w	r3, r3, #31
 80001cc:	f002 021f 	and.w	r2, r2, #31
 80001d0:	bf58      	it	pl
 80001d2:	4253      	negpl	r3, r2
 80001d4:	b25b      	sxtb	r3, r3
 80001d6:	461a      	mov	r2, r3
 80001d8:	2301      	movs	r3, #1
 80001da:	fa03 f102 	lsl.w	r1, r3, r2
 80001de:	4a08      	ldr	r2, [pc, #32]	; (8000200 <NVIC_vSetPendingFlag+0x48>)
 80001e0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80001e4:	2b00      	cmp	r3, #0
 80001e6:	da00      	bge.n	80001ea <NVIC_vSetPendingFlag+0x32>
 80001e8:	331f      	adds	r3, #31
 80001ea:	115b      	asrs	r3, r3, #5
 80001ec:	b25b      	sxtb	r3, r3
 80001ee:	3340      	adds	r3, #64	; 0x40
 80001f0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

}
 80001f4:	bf00      	nop
 80001f6:	370c      	adds	r7, #12
 80001f8:	46bd      	mov	sp, r7
 80001fa:	bc80      	pop	{r7}
 80001fc:	4770      	bx	lr
 80001fe:	bf00      	nop
 8000200:	e000e100 	.word	0xe000e100

08000204 <SysTick_Handler>:

STK_Callback_t Global_SysTickCallback;
Interval_t Global_Interval;

void SysTick_Handler(void)
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
	if (Global_Interval == Interval_Single)
 8000208:	4b09      	ldr	r3, [pc, #36]	; (8000230 <SysTick_Handler+0x2c>)
 800020a:	781b      	ldrb	r3, [r3, #0]
 800020c:	2b00      	cmp	r3, #0
 800020e:	d105      	bne.n	800021c <SysTick_Handler+0x18>
	{
		//disable counter
		CLEAR_BIT(STK->STK_CTRL,ENABLE);
 8000210:	4b08      	ldr	r3, [pc, #32]	; (8000234 <SysTick_Handler+0x30>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	4a07      	ldr	r2, [pc, #28]	; (8000234 <SysTick_Handler+0x30>)
 8000216:	f023 0301 	bic.w	r3, r3, #1
 800021a:	6013      	str	r3, [r2, #0]
	}
	if (Global_SysTickCallback != 0)
 800021c:	4b06      	ldr	r3, [pc, #24]	; (8000238 <SysTick_Handler+0x34>)
 800021e:	681b      	ldr	r3, [r3, #0]
 8000220:	2b00      	cmp	r3, #0
 8000222:	d002      	beq.n	800022a <SysTick_Handler+0x26>
	{
		Global_SysTickCallback();
 8000224:	4b04      	ldr	r3, [pc, #16]	; (8000238 <SysTick_Handler+0x34>)
 8000226:	681b      	ldr	r3, [r3, #0]
 8000228:	4798      	blx	r3
	}
}
 800022a:	bf00      	nop
 800022c:	bd80      	pop	{r7, pc}
 800022e:	bf00      	nop
 8000230:	20000020 	.word	0x20000020
 8000234:	e000e010 	.word	0xe000e010
 8000238:	2000001c 	.word	0x2000001c

0800023c <EXTI0_IRQHandler>:
 */
#include <stdint.h>
#include "NVIC_int.h"

void EXTI0_IRQHandler ()
{
 800023c:	b480      	push	{r7}
 800023e:	af00      	add	r7, sp, #0

	 while(1);
 8000240:	e7fe      	b.n	8000240 <EXTI0_IRQHandler+0x4>

08000242 <EXTI1_IRQHandler>:

}
void EXTI1_IRQHandler ()
{
 8000242:	b580      	push	{r7, lr}
 8000244:	af00      	add	r7, sp, #0
	 NVIC_vSetPendingFlag(EXTI0_IRQn);
 8000246:	2006      	movs	r0, #6
 8000248:	f7ff ffb6 	bl	80001b8 <NVIC_vSetPendingFlag>
	 NVIC_vEnableInterrupt(EXTI0_IRQn);
 800024c:	2006      	movs	r0, #6
 800024e:	f7ff ff8f 	bl	8000170 <NVIC_vEnableInterrupt>
	 while(1);
 8000252:	e7fe      	b.n	8000252 <EXTI1_IRQHandler+0x10>

08000254 <main>:

}


int main(void)
{
 8000254:	b580      	push	{r7, lr}
 8000256:	af00      	add	r7, sp, #0
	 NVIC_vSetPendingFlag(EXTI1_IRQn);
 8000258:	2007      	movs	r0, #7
 800025a:	f7ff ffad 	bl	80001b8 <NVIC_vSetPendingFlag>
	 NVIC_vEnableInterrupt(EXTI1_IRQn);
 800025e:	2007      	movs	r0, #7
 8000260:	f7ff ff86 	bl	8000170 <NVIC_vEnableInterrupt>


    /* Loop forever */
	for(;;);
 8000264:	e7fe      	b.n	8000264 <main+0x10>
	...

08000268 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000268:	480d      	ldr	r0, [pc, #52]	; (80002a0 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800026a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800026c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000270:	480c      	ldr	r0, [pc, #48]	; (80002a4 <LoopForever+0x6>)
  ldr r1, =_edata
 8000272:	490d      	ldr	r1, [pc, #52]	; (80002a8 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000274:	4a0d      	ldr	r2, [pc, #52]	; (80002ac <LoopForever+0xe>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000278:	e002      	b.n	8000280 <LoopCopyDataInit>

0800027a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800027a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800027c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800027e:	3304      	adds	r3, #4

08000280 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000280:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000282:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000284:	d3f9      	bcc.n	800027a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000286:	4a0a      	ldr	r2, [pc, #40]	; (80002b0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000288:	4c0a      	ldr	r4, [pc, #40]	; (80002b4 <LoopForever+0x16>)
  movs r3, #0
 800028a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800028c:	e001      	b.n	8000292 <LoopFillZerobss>

0800028e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800028e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000290:	3204      	adds	r2, #4

08000292 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000292:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000294:	d3fb      	bcc.n	800028e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000296:	f000 f811 	bl	80002bc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800029a:	f7ff ffdb 	bl	8000254 <main>

0800029e <LoopForever>:

LoopForever:
  b LoopForever
 800029e:	e7fe      	b.n	800029e <LoopForever>
  ldr   r0, =_estack
 80002a0:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80002a4:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002a8:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002ac:	08000324 	.word	0x08000324
  ldr r2, =_sbss
 80002b0:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002b4:	20000024 	.word	0x20000024

080002b8 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002b8:	e7fe      	b.n	80002b8 <ADC1_2_IRQHandler>
	...

080002bc <__libc_init_array>:
 80002bc:	b570      	push	{r4, r5, r6, lr}
 80002be:	2600      	movs	r6, #0
 80002c0:	4d0c      	ldr	r5, [pc, #48]	; (80002f4 <__libc_init_array+0x38>)
 80002c2:	4c0d      	ldr	r4, [pc, #52]	; (80002f8 <__libc_init_array+0x3c>)
 80002c4:	1b64      	subs	r4, r4, r5
 80002c6:	10a4      	asrs	r4, r4, #2
 80002c8:	42a6      	cmp	r6, r4
 80002ca:	d109      	bne.n	80002e0 <__libc_init_array+0x24>
 80002cc:	f000 f81a 	bl	8000304 <_init>
 80002d0:	2600      	movs	r6, #0
 80002d2:	4d0a      	ldr	r5, [pc, #40]	; (80002fc <__libc_init_array+0x40>)
 80002d4:	4c0a      	ldr	r4, [pc, #40]	; (8000300 <__libc_init_array+0x44>)
 80002d6:	1b64      	subs	r4, r4, r5
 80002d8:	10a4      	asrs	r4, r4, #2
 80002da:	42a6      	cmp	r6, r4
 80002dc:	d105      	bne.n	80002ea <__libc_init_array+0x2e>
 80002de:	bd70      	pop	{r4, r5, r6, pc}
 80002e0:	f855 3b04 	ldr.w	r3, [r5], #4
 80002e4:	4798      	blx	r3
 80002e6:	3601      	adds	r6, #1
 80002e8:	e7ee      	b.n	80002c8 <__libc_init_array+0xc>
 80002ea:	f855 3b04 	ldr.w	r3, [r5], #4
 80002ee:	4798      	blx	r3
 80002f0:	3601      	adds	r6, #1
 80002f2:	e7f2      	b.n	80002da <__libc_init_array+0x1e>
 80002f4:	0800031c 	.word	0x0800031c
 80002f8:	0800031c 	.word	0x0800031c
 80002fc:	0800031c 	.word	0x0800031c
 8000300:	08000320 	.word	0x08000320

08000304 <_init>:
 8000304:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000306:	bf00      	nop
 8000308:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800030a:	bc08      	pop	{r3}
 800030c:	469e      	mov	lr, r3
 800030e:	4770      	bx	lr

08000310 <_fini>:
 8000310:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000312:	bf00      	nop
 8000314:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000316:	bc08      	pop	{r3}
 8000318:	469e      	mov	lr, r3
 800031a:	4770      	bx	lr
