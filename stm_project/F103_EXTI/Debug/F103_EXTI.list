
F103_EXTI.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f4  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000324  0800032c  0001032c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000324  08000324  0001032c  2**0
                  CONTENTS
  4 .ARM          00000000  08000324  08000324  0001032c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000324  0800032c  0001032c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000324  08000324  00010324  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000328  08000328  00010328  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001032c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000074  20000000  0800032c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000074  0800032c  00020074  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  0001032c  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000087b  00000000  00000000  00010355  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000028b  00000000  00000000  00010bd0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00010e60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000100  00000000  00000000  00010f98  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000202a  00000000  00000000  00011098  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000012ee  00000000  00000000  000130c2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000085e3  00000000  00000000  000143b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001c993  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000003d4  00000000  00000000  0001c9e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	0800030c 	.word	0x0800030c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	0800030c 	.word	0x0800030c

08000170 <EXTI0_IRQHandler>:


IntCallBack_t Globalarr_EXTICallBack [20];

void EXTI0_IRQHandler()
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	if (Globalarr_EXTICallBack[0] != NULL)
 8000174:	4b05      	ldr	r3, [pc, #20]	; (800018c <EXTI0_IRQHandler+0x1c>)
 8000176:	681b      	ldr	r3, [r3, #0]
 8000178:	2b00      	cmp	r3, #0
 800017a:	d002      	beq.n	8000182 <EXTI0_IRQHandler+0x12>
	{
		Globalarr_EXTICallBack[0]();
 800017c:	4b03      	ldr	r3, [pc, #12]	; (800018c <EXTI0_IRQHandler+0x1c>)
 800017e:	681b      	ldr	r3, [r3, #0]
 8000180:	4798      	blx	r3
	}
	EXTI_ClearPendingFlag(EXTI_INT0);
 8000182:	2000      	movs	r0, #0
 8000184:	f000 f832 	bl	80001ec <EXTI_ClearPendingFlag>
}
 8000188:	bf00      	nop
 800018a:	bd80      	pop	{r7, pc}
 800018c:	2000001c 	.word	0x2000001c

08000190 <EXTI1_IRQHandler>:
void EXTI1_IRQHandler()
{
 8000190:	b580      	push	{r7, lr}
 8000192:	af00      	add	r7, sp, #0
	if (Globalarr_EXTICallBack[0] != NULL)
 8000194:	4b05      	ldr	r3, [pc, #20]	; (80001ac <EXTI1_IRQHandler+0x1c>)
 8000196:	681b      	ldr	r3, [r3, #0]
 8000198:	2b00      	cmp	r3, #0
 800019a:	d002      	beq.n	80001a2 <EXTI1_IRQHandler+0x12>
	{
		Globalarr_EXTICallBack[0]();
 800019c:	4b03      	ldr	r3, [pc, #12]	; (80001ac <EXTI1_IRQHandler+0x1c>)
 800019e:	681b      	ldr	r3, [r3, #0]
 80001a0:	4798      	blx	r3
	}
	EXTI_ClearPendingFlag(EXTI_INT1);
 80001a2:	2001      	movs	r0, #1
 80001a4:	f000 f822 	bl	80001ec <EXTI_ClearPendingFlag>

}
 80001a8:	bf00      	nop
 80001aa:	bd80      	pop	{r7, pc}
 80001ac:	2000001c 	.word	0x2000001c

080001b0 <EXTI2_IRQHandler>:
void EXTI2_IRQHandler()
{
 80001b0:	b580      	push	{r7, lr}
 80001b2:	af00      	add	r7, sp, #0
	if (Globalarr_EXTICallBack[0] != NULL)
 80001b4:	4b05      	ldr	r3, [pc, #20]	; (80001cc <EXTI2_IRQHandler+0x1c>)
 80001b6:	681b      	ldr	r3, [r3, #0]
 80001b8:	2b00      	cmp	r3, #0
 80001ba:	d002      	beq.n	80001c2 <EXTI2_IRQHandler+0x12>
	{
		Globalarr_EXTICallBack[0]();
 80001bc:	4b03      	ldr	r3, [pc, #12]	; (80001cc <EXTI2_IRQHandler+0x1c>)
 80001be:	681b      	ldr	r3, [r3, #0]
 80001c0:	4798      	blx	r3
	}
	EXTI_ClearPendingFlag(EXTI_INT2);
 80001c2:	2002      	movs	r0, #2
 80001c4:	f000 f812 	bl	80001ec <EXTI_ClearPendingFlag>

}
 80001c8:	bf00      	nop
 80001ca:	bd80      	pop	{r7, pc}
 80001cc:	2000001c 	.word	0x2000001c

080001d0 <EXTI3_IRQHandler>:
void EXTI3_IRQHandler()
{
 80001d0:	b580      	push	{r7, lr}
 80001d2:	af00      	add	r7, sp, #0
	if (Globalarr_EXTICallBack[0] != NULL)
 80001d4:	4b04      	ldr	r3, [pc, #16]	; (80001e8 <EXTI3_IRQHandler+0x18>)
 80001d6:	681b      	ldr	r3, [r3, #0]
 80001d8:	2b00      	cmp	r3, #0
 80001da:	d002      	beq.n	80001e2 <EXTI3_IRQHandler+0x12>
	{
		Globalarr_EXTICallBack[0]();
 80001dc:	4b02      	ldr	r3, [pc, #8]	; (80001e8 <EXTI3_IRQHandler+0x18>)
 80001de:	681b      	ldr	r3, [r3, #0]
 80001e0:	4798      	blx	r3
	}
}
 80001e2:	bf00      	nop
 80001e4:	bd80      	pop	{r7, pc}
 80001e6:	bf00      	nop
 80001e8:	2000001c 	.word	0x2000001c

080001ec <EXTI_ClearPendingFlag>:
	EXTI->EXTI_SWIER &= ~(0b1<<copy_eEXTI_Int);
	EXTI->EXTI_SWIER |=  (0b1<<copy_eEXTI_Int);

}
void EXTI_ClearPendingFlag(EXTI_Int_Type copy_eEXTI_Int)
{
 80001ec:	b480      	push	{r7}
 80001ee:	b083      	sub	sp, #12
 80001f0:	af00      	add	r7, sp, #0
 80001f2:	4603      	mov	r3, r0
 80001f4:	71fb      	strb	r3, [r7, #7]
	EXTI->EXTI_PR &= ~(0b1<<copy_eEXTI_Int);
 80001f6:	4b0d      	ldr	r3, [pc, #52]	; (800022c <EXTI_ClearPendingFlag+0x40>)
 80001f8:	695b      	ldr	r3, [r3, #20]
 80001fa:	79fa      	ldrb	r2, [r7, #7]
 80001fc:	2101      	movs	r1, #1
 80001fe:	fa01 f202 	lsl.w	r2, r1, r2
 8000202:	43d2      	mvns	r2, r2
 8000204:	4611      	mov	r1, r2
 8000206:	4a09      	ldr	r2, [pc, #36]	; (800022c <EXTI_ClearPendingFlag+0x40>)
 8000208:	400b      	ands	r3, r1
 800020a:	6153      	str	r3, [r2, #20]
	EXTI->EXTI_PR |=  (0b1<<copy_eEXTI_Int);
 800020c:	4b07      	ldr	r3, [pc, #28]	; (800022c <EXTI_ClearPendingFlag+0x40>)
 800020e:	695b      	ldr	r3, [r3, #20]
 8000210:	79fa      	ldrb	r2, [r7, #7]
 8000212:	2101      	movs	r1, #1
 8000214:	fa01 f202 	lsl.w	r2, r1, r2
 8000218:	4611      	mov	r1, r2
 800021a:	4a04      	ldr	r2, [pc, #16]	; (800022c <EXTI_ClearPendingFlag+0x40>)
 800021c:	430b      	orrs	r3, r1
 800021e:	6153      	str	r3, [r2, #20]

}
 8000220:	bf00      	nop
 8000222:	370c      	adds	r7, #12
 8000224:	46bd      	mov	sp, r7
 8000226:	bc80      	pop	{r7}
 8000228:	4770      	bx	lr
 800022a:	bf00      	nop
 800022c:	40010400 	.word	0x40010400

08000230 <SysTick_Handler>:

STK_Callback_t Global_SysTickCallback;
Interval_t Global_Interval;

void SysTick_Handler(void)
{
 8000230:	b580      	push	{r7, lr}
 8000232:	af00      	add	r7, sp, #0
	if (Global_Interval == Interval_Single)
 8000234:	4b09      	ldr	r3, [pc, #36]	; (800025c <SysTick_Handler+0x2c>)
 8000236:	781b      	ldrb	r3, [r3, #0]
 8000238:	2b00      	cmp	r3, #0
 800023a:	d105      	bne.n	8000248 <SysTick_Handler+0x18>
	{
		//disable counter
		CLEAR_BIT(STK->STK_CTRL,ENABLE);
 800023c:	4b08      	ldr	r3, [pc, #32]	; (8000260 <SysTick_Handler+0x30>)
 800023e:	681b      	ldr	r3, [r3, #0]
 8000240:	4a07      	ldr	r2, [pc, #28]	; (8000260 <SysTick_Handler+0x30>)
 8000242:	f023 0301 	bic.w	r3, r3, #1
 8000246:	6013      	str	r3, [r2, #0]
	}
	if (Global_SysTickCallback != 0)
 8000248:	4b06      	ldr	r3, [pc, #24]	; (8000264 <SysTick_Handler+0x34>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	2b00      	cmp	r3, #0
 800024e:	d002      	beq.n	8000256 <SysTick_Handler+0x26>
	{
		Global_SysTickCallback();
 8000250:	4b04      	ldr	r3, [pc, #16]	; (8000264 <SysTick_Handler+0x34>)
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	4798      	blx	r3
	}
}
 8000256:	bf00      	nop
 8000258:	bd80      	pop	{r7, pc}
 800025a:	bf00      	nop
 800025c:	20000070 	.word	0x20000070
 8000260:	e000e010 	.word	0xe000e010
 8000264:	2000006c 	.word	0x2000006c

08000268 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000268:	b480      	push	{r7}
 800026a:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 800026c:	e7fe      	b.n	800026c <main+0x4>
	...

08000270 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000270:	480d      	ldr	r0, [pc, #52]	; (80002a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000272:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000274:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000278:	480c      	ldr	r0, [pc, #48]	; (80002ac <LoopForever+0x6>)
  ldr r1, =_edata
 800027a:	490d      	ldr	r1, [pc, #52]	; (80002b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800027c:	4a0d      	ldr	r2, [pc, #52]	; (80002b4 <LoopForever+0xe>)
  movs r3, #0
 800027e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000280:	e002      	b.n	8000288 <LoopCopyDataInit>

08000282 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000282:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000284:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000286:	3304      	adds	r3, #4

08000288 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000288:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800028a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800028c:	d3f9      	bcc.n	8000282 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800028e:	4a0a      	ldr	r2, [pc, #40]	; (80002b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000290:	4c0a      	ldr	r4, [pc, #40]	; (80002bc <LoopForever+0x16>)
  movs r3, #0
 8000292:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000294:	e001      	b.n	800029a <LoopFillZerobss>

08000296 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000296:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000298:	3204      	adds	r2, #4

0800029a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800029a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800029c:	d3fb      	bcc.n	8000296 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800029e:	f000 f811 	bl	80002c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002a2:	f7ff ffe1 	bl	8000268 <main>

080002a6 <LoopForever>:

LoopForever:
  b LoopForever
 80002a6:	e7fe      	b.n	80002a6 <LoopForever>
  ldr   r0, =_estack
 80002a8:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80002ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80002b0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80002b4:	0800032c 	.word	0x0800032c
  ldr r2, =_sbss
 80002b8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002bc:	20000074 	.word	0x20000074

080002c0 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002c0:	e7fe      	b.n	80002c0 <ADC1_2_IRQHandler>
	...

080002c4 <__libc_init_array>:
 80002c4:	b570      	push	{r4, r5, r6, lr}
 80002c6:	2600      	movs	r6, #0
 80002c8:	4d0c      	ldr	r5, [pc, #48]	; (80002fc <__libc_init_array+0x38>)
 80002ca:	4c0d      	ldr	r4, [pc, #52]	; (8000300 <__libc_init_array+0x3c>)
 80002cc:	1b64      	subs	r4, r4, r5
 80002ce:	10a4      	asrs	r4, r4, #2
 80002d0:	42a6      	cmp	r6, r4
 80002d2:	d109      	bne.n	80002e8 <__libc_init_array+0x24>
 80002d4:	f000 f81a 	bl	800030c <_init>
 80002d8:	2600      	movs	r6, #0
 80002da:	4d0a      	ldr	r5, [pc, #40]	; (8000304 <__libc_init_array+0x40>)
 80002dc:	4c0a      	ldr	r4, [pc, #40]	; (8000308 <__libc_init_array+0x44>)
 80002de:	1b64      	subs	r4, r4, r5
 80002e0:	10a4      	asrs	r4, r4, #2
 80002e2:	42a6      	cmp	r6, r4
 80002e4:	d105      	bne.n	80002f2 <__libc_init_array+0x2e>
 80002e6:	bd70      	pop	{r4, r5, r6, pc}
 80002e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80002ec:	4798      	blx	r3
 80002ee:	3601      	adds	r6, #1
 80002f0:	e7ee      	b.n	80002d0 <__libc_init_array+0xc>
 80002f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80002f6:	4798      	blx	r3
 80002f8:	3601      	adds	r6, #1
 80002fa:	e7f2      	b.n	80002e2 <__libc_init_array+0x1e>
 80002fc:	08000324 	.word	0x08000324
 8000300:	08000324 	.word	0x08000324
 8000304:	08000324 	.word	0x08000324
 8000308:	08000328 	.word	0x08000328

0800030c <_init>:
 800030c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800030e:	bf00      	nop
 8000310:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000312:	bc08      	pop	{r3}
 8000314:	469e      	mov	lr, r3
 8000316:	4770      	bx	lr

08000318 <_fini>:
 8000318:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800031a:	bf00      	nop
 800031c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800031e:	bc08      	pop	{r3}
 8000320:	469e      	mov	lr, r3
 8000322:	4770      	bx	lr
