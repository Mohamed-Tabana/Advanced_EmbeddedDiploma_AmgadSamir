
F446RE_DMA_DRIVER.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000030c  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080004d0  080004d0  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080004d0  080004d0  00020008  2**0
                  CONTENTS
  4 .ARM          00000000  080004d0  080004d0  00020008  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004d0  080004d0  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004d0  080004d0  000104d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080004d4  080004d4  000104d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000008  20000000  080004d8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000019c  20000008  080004e0  00020008  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001a4  080004e0  000201a4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020008  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001308  00000000  00000000  00020038  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000001e6  00000000  00000000  00021340  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000001d8  00000000  00000000  00021528  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000001b0  00000000  00000000  00021700  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001e72  00000000  00000000  000218b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000110d  00000000  00000000  00023722  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000945a  00000000  00000000  0002482f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002dc89  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000006f8  00000000  00000000  0002dcdc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000008 	.word	0x20000008
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080004b8 	.word	0x080004b8

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	2000000c 	.word	0x2000000c
 8000200:	080004b8 	.word	0x080004b8

08000204 <DMA_vReadFlagStatus>:
	DMA_vEnableStream(copy_eDMAConfig->Init.DMANumber,copy_eDMAConfig->Init.Channel,stream_enabled);


}
void DMA_vReadFlagStatus(DMA_Peripheral_Number_t DMA_Number,Stream_Selection_t Stream_Number,DMA_Interrupt_t copy_eDMA_Interrupt,uint8_t *interruptStatusFlag)
{
 8000204:	b480      	push	{r7}
 8000206:	b085      	sub	sp, #20
 8000208:	af00      	add	r7, sp, #0
 800020a:	603b      	str	r3, [r7, #0]
 800020c:	4603      	mov	r3, r0
 800020e:	71fb      	strb	r3, [r7, #7]
 8000210:	460b      	mov	r3, r1
 8000212:	71bb      	strb	r3, [r7, #6]
 8000214:	4613      	mov	r3, r2
 8000216:	717b      	strb	r3, [r7, #5]
	uint8_t flagShift=(uint8_t)copy_eDMA_Interrupt+6*((uint8_t)Stream_Number%4);
 8000218:	79bb      	ldrb	r3, [r7, #6]
 800021a:	f003 0303 	and.w	r3, r3, #3
 800021e:	b2db      	uxtb	r3, r3
 8000220:	461a      	mov	r2, r3
 8000222:	0052      	lsls	r2, r2, #1
 8000224:	4413      	add	r3, r2
 8000226:	005b      	lsls	r3, r3, #1
 8000228:	b2da      	uxtb	r2, r3
 800022a:	797b      	ldrb	r3, [r7, #5]
 800022c:	4413      	add	r3, r2
 800022e:	73fb      	strb	r3, [r7, #15]
	*interruptStatusFlag= READ_BIT(DMAPeripheral[DMA_Number]->DMA_LISR[Stream_Number/4],flagShift );
 8000230:	79fb      	ldrb	r3, [r7, #7]
 8000232:	4a0b      	ldr	r2, [pc, #44]	; (8000260 <DMA_vReadFlagStatus+0x5c>)
 8000234:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000238:	79ba      	ldrb	r2, [r7, #6]
 800023a:	0892      	lsrs	r2, r2, #2
 800023c:	b2d2      	uxtb	r2, r2
 800023e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000242:	7bfb      	ldrb	r3, [r7, #15]
 8000244:	fa22 f303 	lsr.w	r3, r2, r3
 8000248:	b2db      	uxtb	r3, r3
 800024a:	f003 0301 	and.w	r3, r3, #1
 800024e:	b2da      	uxtb	r2, r3
 8000250:	683b      	ldr	r3, [r7, #0]
 8000252:	701a      	strb	r2, [r3, #0]

}
 8000254:	bf00      	nop
 8000256:	3714      	adds	r7, #20
 8000258:	46bd      	mov	sp, r7
 800025a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800025e:	4770      	bx	lr
 8000260:	20000000 	.word	0x20000000

08000264 <DMA_vIRQHandler>:
void DMA_vIRQHandler(DMA_Peripheral_Number_t DMA_Number,Stream_Selection_t Stream_Number)
{
 8000264:	b580      	push	{r7, lr}
 8000266:	b084      	sub	sp, #16
 8000268:	af00      	add	r7, sp, #0
 800026a:	4603      	mov	r3, r0
 800026c:	460a      	mov	r2, r1
 800026e:	71fb      	strb	r3, [r7, #7]
 8000270:	4613      	mov	r3, r2
 8000272:	71bb      	strb	r3, [r7, #6]
	uint8_t flagStatus=0;
 8000274:	2300      	movs	r3, #0
 8000276:	73bb      	strb	r3, [r7, #14]
	for (uint8_t i=0 ;i<Total_Number_Of_Interrupts ; i++)
 8000278:	2300      	movs	r3, #0
 800027a:	73fb      	strb	r3, [r7, #15]
 800027c:	e045      	b.n	800030a <DMA_vIRQHandler+0xa6>
	{

		DMA_vReadFlagStatus(DMA_Number,Stream_Number, i, &flagStatus);
 800027e:	f107 030e 	add.w	r3, r7, #14
 8000282:	7bfa      	ldrb	r2, [r7, #15]
 8000284:	79b9      	ldrb	r1, [r7, #6]
 8000286:	79f8      	ldrb	r0, [r7, #7]
 8000288:	f7ff ffbc 	bl	8000204 <DMA_vReadFlagStatus>
		if (flagStatus)
 800028c:	7bbb      	ldrb	r3, [r7, #14]
 800028e:	2b00      	cmp	r3, #0
 8000290:	d038      	beq.n	8000304 <DMA_vIRQHandler+0xa0>
		{
			switch (DMA_Number)
 8000292:	79fb      	ldrb	r3, [r7, #7]
 8000294:	2b00      	cmp	r3, #0
 8000296:	d002      	beq.n	800029e <DMA_vIRQHandler+0x3a>
 8000298:	2b01      	cmp	r3, #1
 800029a:	d018      	beq.n	80002ce <DMA_vIRQHandler+0x6a>
					arrDMA2_PtrToFunction[Stream_Number][i]();
				}
				break;
			default:
				/* Do Nothing!*/
				break;
 800029c:	e032      	b.n	8000304 <DMA_vIRQHandler+0xa0>
				if (arrDMA1_PtrToFunction[Stream_Number][i] != NULL)
 800029e:	79ba      	ldrb	r2, [r7, #6]
 80002a0:	7bf9      	ldrb	r1, [r7, #15]
 80002a2:	481e      	ldr	r0, [pc, #120]	; (800031c <DMA_vIRQHandler+0xb8>)
 80002a4:	4613      	mov	r3, r2
 80002a6:	005b      	lsls	r3, r3, #1
 80002a8:	4413      	add	r3, r2
 80002aa:	005b      	lsls	r3, r3, #1
 80002ac:	440b      	add	r3, r1
 80002ae:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80002b2:	2b00      	cmp	r3, #0
 80002b4:	d023      	beq.n	80002fe <DMA_vIRQHandler+0x9a>
					arrDMA1_PtrToFunction[Stream_Number][i]();
 80002b6:	79ba      	ldrb	r2, [r7, #6]
 80002b8:	7bf9      	ldrb	r1, [r7, #15]
 80002ba:	4818      	ldr	r0, [pc, #96]	; (800031c <DMA_vIRQHandler+0xb8>)
 80002bc:	4613      	mov	r3, r2
 80002be:	005b      	lsls	r3, r3, #1
 80002c0:	4413      	add	r3, r2
 80002c2:	005b      	lsls	r3, r3, #1
 80002c4:	440b      	add	r3, r1
 80002c6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80002ca:	4798      	blx	r3
				break;
 80002cc:	e017      	b.n	80002fe <DMA_vIRQHandler+0x9a>
				if (arrDMA2_PtrToFunction[Stream_Number][i] != NULL)
 80002ce:	79ba      	ldrb	r2, [r7, #6]
 80002d0:	7bf9      	ldrb	r1, [r7, #15]
 80002d2:	4813      	ldr	r0, [pc, #76]	; (8000320 <DMA_vIRQHandler+0xbc>)
 80002d4:	4613      	mov	r3, r2
 80002d6:	005b      	lsls	r3, r3, #1
 80002d8:	4413      	add	r3, r2
 80002da:	005b      	lsls	r3, r3, #1
 80002dc:	440b      	add	r3, r1
 80002de:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80002e2:	2b00      	cmp	r3, #0
 80002e4:	d00d      	beq.n	8000302 <DMA_vIRQHandler+0x9e>
					arrDMA2_PtrToFunction[Stream_Number][i]();
 80002e6:	79ba      	ldrb	r2, [r7, #6]
 80002e8:	7bf9      	ldrb	r1, [r7, #15]
 80002ea:	480d      	ldr	r0, [pc, #52]	; (8000320 <DMA_vIRQHandler+0xbc>)
 80002ec:	4613      	mov	r3, r2
 80002ee:	005b      	lsls	r3, r3, #1
 80002f0:	4413      	add	r3, r2
 80002f2:	005b      	lsls	r3, r3, #1
 80002f4:	440b      	add	r3, r1
 80002f6:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80002fa:	4798      	blx	r3
				break;
 80002fc:	e001      	b.n	8000302 <DMA_vIRQHandler+0x9e>
				break;
 80002fe:	bf00      	nop
 8000300:	e000      	b.n	8000304 <DMA_vIRQHandler+0xa0>
				break;
 8000302:	bf00      	nop
	for (uint8_t i=0 ;i<Total_Number_Of_Interrupts ; i++)
 8000304:	7bfb      	ldrb	r3, [r7, #15]
 8000306:	3301      	adds	r3, #1
 8000308:	73fb      	strb	r3, [r7, #15]
 800030a:	7bfb      	ldrb	r3, [r7, #15]
 800030c:	2b05      	cmp	r3, #5
 800030e:	d9b6      	bls.n	800027e <DMA_vIRQHandler+0x1a>
		{
			/* Do Nothing!*/
		}
	}

}
 8000310:	bf00      	nop
 8000312:	bf00      	nop
 8000314:	3710      	adds	r7, #16
 8000316:	46bd      	mov	sp, r7
 8000318:	bd80      	pop	{r7, pc}
 800031a:	bf00      	nop
 800031c:	20000024 	.word	0x20000024
 8000320:	200000e4 	.word	0x200000e4

08000324 <DMA1_Stream0_IRQHandler>:
/* ==========================
 *           DMA1
 * ========================== */

void DMA1_Stream0_IRQHandler(void)
{
 8000324:	b580      	push	{r7, lr}
 8000326:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_1,Stream_0);
 8000328:	2100      	movs	r1, #0
 800032a:	2000      	movs	r0, #0
 800032c:	f7ff ff9a 	bl	8000264 <DMA_vIRQHandler>
}
 8000330:	bf00      	nop
 8000332:	bd80      	pop	{r7, pc}

08000334 <DMA1_Stream1_IRQHandler>:
void DMA1_Stream1_IRQHandler(void)
{
 8000334:	b580      	push	{r7, lr}
 8000336:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_1,Stream_1);
 8000338:	2101      	movs	r1, #1
 800033a:	2000      	movs	r0, #0
 800033c:	f7ff ff92 	bl	8000264 <DMA_vIRQHandler>
}
 8000340:	bf00      	nop
 8000342:	bd80      	pop	{r7, pc}

08000344 <DMA1_Stream3_IRQHandler>:
void DMA1_Stream3_IRQHandler(void)
{
 8000344:	b580      	push	{r7, lr}
 8000346:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_1,Stream_3);
 8000348:	2103      	movs	r1, #3
 800034a:	2000      	movs	r0, #0
 800034c:	f7ff ff8a 	bl	8000264 <DMA_vIRQHandler>
}
 8000350:	bf00      	nop
 8000352:	bd80      	pop	{r7, pc}

08000354 <DMA1_Stream4_IRQHandler>:
void DMA1_Stream4_IRQHandler(void)
{
 8000354:	b580      	push	{r7, lr}
 8000356:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_1,Stream_4);
 8000358:	2104      	movs	r1, #4
 800035a:	2000      	movs	r0, #0
 800035c:	f7ff ff82 	bl	8000264 <DMA_vIRQHandler>
}
 8000360:	bf00      	nop
 8000362:	bd80      	pop	{r7, pc}

08000364 <DMA1_Stream5_IRQHandler>:
void DMA1_Stream5_IRQHandler(void)
{
 8000364:	b580      	push	{r7, lr}
 8000366:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_1,Stream_5);
 8000368:	2105      	movs	r1, #5
 800036a:	2000      	movs	r0, #0
 800036c:	f7ff ff7a 	bl	8000264 <DMA_vIRQHandler>
}
 8000370:	bf00      	nop
 8000372:	bd80      	pop	{r7, pc}

08000374 <DMA1_Stream6_IRQHandler>:
void DMA1_Stream6_IRQHandler(void)
{
 8000374:	b580      	push	{r7, lr}
 8000376:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_1,Stream_6);
 8000378:	2106      	movs	r1, #6
 800037a:	2000      	movs	r0, #0
 800037c:	f7ff ff72 	bl	8000264 <DMA_vIRQHandler>
}
 8000380:	bf00      	nop
 8000382:	bd80      	pop	{r7, pc}

08000384 <DMA1_Stream7_IRQHandler>:
void DMA1_Stream7_IRQHandler(void)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_1,Stream_7);
 8000388:	2107      	movs	r1, #7
 800038a:	2000      	movs	r0, #0
 800038c:	f7ff ff6a 	bl	8000264 <DMA_vIRQHandler>
}
 8000390:	bf00      	nop
 8000392:	bd80      	pop	{r7, pc}

08000394 <DMA2_Stream0_IRQHandler>:
/* ==========================
 *           DMA2
 * ========================== */

void DMA2_Stream0_IRQHandler(void)
{
 8000394:	b580      	push	{r7, lr}
 8000396:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_2,Stream_0);
 8000398:	2100      	movs	r1, #0
 800039a:	2001      	movs	r0, #1
 800039c:	f7ff ff62 	bl	8000264 <DMA_vIRQHandler>
}
 80003a0:	bf00      	nop
 80003a2:	bd80      	pop	{r7, pc}

080003a4 <DMA2_Stream1_IRQHandler>:
void DMA2_Stream1_IRQHandler(void)
{
 80003a4:	b580      	push	{r7, lr}
 80003a6:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_2,Stream_1);
 80003a8:	2101      	movs	r1, #1
 80003aa:	2001      	movs	r0, #1
 80003ac:	f7ff ff5a 	bl	8000264 <DMA_vIRQHandler>
}
 80003b0:	bf00      	nop
 80003b2:	bd80      	pop	{r7, pc}

080003b4 <DMA2_Stream2_IRQHandler>:
void DMA2_Stream2_IRQHandler(void)
{
 80003b4:	b580      	push	{r7, lr}
 80003b6:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_2,Stream_2);
 80003b8:	2102      	movs	r1, #2
 80003ba:	2001      	movs	r0, #1
 80003bc:	f7ff ff52 	bl	8000264 <DMA_vIRQHandler>
}
 80003c0:	bf00      	nop
 80003c2:	bd80      	pop	{r7, pc}

080003c4 <DMA2_Stream3_IRQHandler>:
void DMA2_Stream3_IRQHandler(void)
{
 80003c4:	b580      	push	{r7, lr}
 80003c6:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_2,Stream_3);
 80003c8:	2103      	movs	r1, #3
 80003ca:	2001      	movs	r0, #1
 80003cc:	f7ff ff4a 	bl	8000264 <DMA_vIRQHandler>
}
 80003d0:	bf00      	nop
 80003d2:	bd80      	pop	{r7, pc}

080003d4 <DMA2_Stream4_IRQHandler>:
void DMA2_Stream4_IRQHandler(void)
{
 80003d4:	b580      	push	{r7, lr}
 80003d6:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_2,Stream_4);
 80003d8:	2104      	movs	r1, #4
 80003da:	2001      	movs	r0, #1
 80003dc:	f7ff ff42 	bl	8000264 <DMA_vIRQHandler>
}
 80003e0:	bf00      	nop
 80003e2:	bd80      	pop	{r7, pc}

080003e4 <DMA2_Stream5_IRQHandler>:
void DMA2_Stream5_IRQHandler(void)
{
 80003e4:	b580      	push	{r7, lr}
 80003e6:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_2,Stream_5);
 80003e8:	2105      	movs	r1, #5
 80003ea:	2001      	movs	r0, #1
 80003ec:	f7ff ff3a 	bl	8000264 <DMA_vIRQHandler>
}
 80003f0:	bf00      	nop
 80003f2:	bd80      	pop	{r7, pc}

080003f4 <DMA2_Stream6_IRQHandler>:
void DMA2_Stream6_IRQHandler(void)
{
 80003f4:	b580      	push	{r7, lr}
 80003f6:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_2,Stream_6);
 80003f8:	2106      	movs	r1, #6
 80003fa:	2001      	movs	r0, #1
 80003fc:	f7ff ff32 	bl	8000264 <DMA_vIRQHandler>
}
 8000400:	bf00      	nop
 8000402:	bd80      	pop	{r7, pc}

08000404 <DMA2_Stream7_IRQHandler>:
void DMA2_Stream7_IRQHandler(void)
{
 8000404:	b580      	push	{r7, lr}
 8000406:	af00      	add	r7, sp, #0
	DMA_vIRQHandler(DMA_Number_2,Stream_7);
 8000408:	2107      	movs	r1, #7
 800040a:	2001      	movs	r0, #1
 800040c:	f7ff ff2a 	bl	8000264 <DMA_vIRQHandler>
}
 8000410:	bf00      	nop
 8000412:	bd80      	pop	{r7, pc}

08000414 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000414:	b480      	push	{r7}
 8000416:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 8000418:	e7fe      	b.n	8000418 <main+0x4>
	...

0800041c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800041c:	480d      	ldr	r0, [pc, #52]	; (8000454 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800041e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000420:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000424:	480c      	ldr	r0, [pc, #48]	; (8000458 <LoopForever+0x6>)
  ldr r1, =_edata
 8000426:	490d      	ldr	r1, [pc, #52]	; (800045c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000428:	4a0d      	ldr	r2, [pc, #52]	; (8000460 <LoopForever+0xe>)
  movs r3, #0
 800042a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800042c:	e002      	b.n	8000434 <LoopCopyDataInit>

0800042e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800042e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000430:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000432:	3304      	adds	r3, #4

08000434 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000434:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000436:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000438:	d3f9      	bcc.n	800042e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800043a:	4a0a      	ldr	r2, [pc, #40]	; (8000464 <LoopForever+0x12>)
  ldr r4, =_ebss
 800043c:	4c0a      	ldr	r4, [pc, #40]	; (8000468 <LoopForever+0x16>)
  movs r3, #0
 800043e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000440:	e001      	b.n	8000446 <LoopFillZerobss>

08000442 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000442:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000444:	3204      	adds	r2, #4

08000446 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000446:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000448:	d3fb      	bcc.n	8000442 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800044a:	f000 f811 	bl	8000470 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800044e:	f7ff ffe1 	bl	8000414 <main>

08000452 <LoopForever>:

LoopForever:
  b LoopForever
 8000452:	e7fe      	b.n	8000452 <LoopForever>
  ldr   r0, =_estack
 8000454:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000458:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800045c:	20000008 	.word	0x20000008
  ldr r2, =_sidata
 8000460:	080004d8 	.word	0x080004d8
  ldr r2, =_sbss
 8000464:	20000008 	.word	0x20000008
  ldr r4, =_ebss
 8000468:	200001a4 	.word	0x200001a4

0800046c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800046c:	e7fe      	b.n	800046c <ADC_IRQHandler>
	...

08000470 <__libc_init_array>:
 8000470:	b570      	push	{r4, r5, r6, lr}
 8000472:	4d0d      	ldr	r5, [pc, #52]	; (80004a8 <__libc_init_array+0x38>)
 8000474:	4c0d      	ldr	r4, [pc, #52]	; (80004ac <__libc_init_array+0x3c>)
 8000476:	1b64      	subs	r4, r4, r5
 8000478:	10a4      	asrs	r4, r4, #2
 800047a:	2600      	movs	r6, #0
 800047c:	42a6      	cmp	r6, r4
 800047e:	d109      	bne.n	8000494 <__libc_init_array+0x24>
 8000480:	4d0b      	ldr	r5, [pc, #44]	; (80004b0 <__libc_init_array+0x40>)
 8000482:	4c0c      	ldr	r4, [pc, #48]	; (80004b4 <__libc_init_array+0x44>)
 8000484:	f000 f818 	bl	80004b8 <_init>
 8000488:	1b64      	subs	r4, r4, r5
 800048a:	10a4      	asrs	r4, r4, #2
 800048c:	2600      	movs	r6, #0
 800048e:	42a6      	cmp	r6, r4
 8000490:	d105      	bne.n	800049e <__libc_init_array+0x2e>
 8000492:	bd70      	pop	{r4, r5, r6, pc}
 8000494:	f855 3b04 	ldr.w	r3, [r5], #4
 8000498:	4798      	blx	r3
 800049a:	3601      	adds	r6, #1
 800049c:	e7ee      	b.n	800047c <__libc_init_array+0xc>
 800049e:	f855 3b04 	ldr.w	r3, [r5], #4
 80004a2:	4798      	blx	r3
 80004a4:	3601      	adds	r6, #1
 80004a6:	e7f2      	b.n	800048e <__libc_init_array+0x1e>
 80004a8:	080004d0 	.word	0x080004d0
 80004ac:	080004d0 	.word	0x080004d0
 80004b0:	080004d0 	.word	0x080004d0
 80004b4:	080004d4 	.word	0x080004d4

080004b8 <_init>:
 80004b8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004ba:	bf00      	nop
 80004bc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004be:	bc08      	pop	{r3}
 80004c0:	469e      	mov	lr, r3
 80004c2:	4770      	bx	lr

080004c4 <_fini>:
 80004c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80004c6:	bf00      	nop
 80004c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80004ca:	bc08      	pop	{r3}
 80004cc:	469e      	mov	lr, r3
 80004ce:	4770      	bx	lr
