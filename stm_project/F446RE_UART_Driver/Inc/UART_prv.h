
#ifndef UART_PRIVATE_H_
#define UART_PRIVATE_H_

typedef void (*IntCallBack_t) (void);

enum {
	// Status register (USART_SR)
	USART_SR_PE = 0,
	USART_SR_FE,
	USART_SR_NE,
	USART_SR_ORE,
	USART_SR_IDLE,
	USART_SR_RXNE,
	USART_SR_TC,
	USART_SR_TXE,
	USART_SR_LBD,
	USART_SR_CTS,

	// Data register (USART_DR)

	// Baud rate register (USART_BRR)

	// Control register 1 (USART_CR1)
	USART_CR1_SBK = 0,
	USART_CR1_RWU,
	USART_CR1_RE,
	USART_CR1_TE,
	USART_CR1_IDLEIE,
	USART_CR1_RXNEIE,
	USART_CR1_TCIE,
	USART_CR1_TXEIE,
	USART_CR1_PEIE,
	USART_CR1_PS,
	USART_CR1_PCE,
	USART_CR1_WAKE,
	USART_CR1_M,
	USART_CR1_UE,

	USART_CR1_OVER8=15,


	// Control register 2 (USART_CR2)
	USART_CR2_ADD = 0,
	USART_CR2_LBDL=5,
	USART_CR2_LBDIE=6,
	USART_CR2_LBCL=8,
	USART_CR2_CPHA,
	USART_CR2_CPOL,
	USART_CR2_CLKEN,
	USART_CR2_STOP,

	// Control register 3 (USART_CR3)
	USART_CR3_EIE = 0,
	USART_CR3_IREN,
	USART_CR3_IRLP,
	USART_CR3_HDSEL,
	USART_CR3_NACK,
	USART_CR3_SCEN,
	USART_CR3_DMAR,
	USART_CR3_DMAT,
	USART_CR3_RTSE,
	USART_CR3_CTSE,
	USART_CR3_CTSIE,
	USART_CR3_ONEBIT
} ;

#endif
