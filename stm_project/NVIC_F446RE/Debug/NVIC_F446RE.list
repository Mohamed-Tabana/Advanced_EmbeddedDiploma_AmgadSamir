
NVIC_F446RE.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000001f4  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080003b8  080003c0  000103c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080003b8  080003b8  000103c0  2**0
                  CONTENTS
  4 .ARM          00000000  080003b8  080003b8  000103c0  2**0
                  CONTENTS
  5 .preinit_array 00000000  080003b8  080003c0  000103c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080003b8  080003b8  000103b8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080003bc  080003bc  000103bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000103c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000024  20000000  080003c0  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000024  080003c0  00020024  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000103c0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000b86  00000000  00000000  000103f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000316  00000000  00000000  00010f76  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000108  00000000  00000000  00011290  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000d0  00000000  00000000  00011398  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000007c9  00000000  00000000  00011468  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013c0  00000000  00000000  00011c31  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000086f2  00000000  00000000  00012ff1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0001b6e3  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000030c  00000000  00000000  0001b734  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	080003a0 	.word	0x080003a0

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	080003a0 	.word	0x080003a0

08000204 <NVIC_vEnableInterrupt>:
#include "NVIC_int.h"

#include "Utils.h"

void NVIC_vEnableInterrupt(Interrupt_t copy_eInterrupt)
{
 8000204:	b480      	push	{r7}
 8000206:	b083      	sub	sp, #12
 8000208:	af00      	add	r7, sp, #0
 800020a:	4603      	mov	r3, r0
 800020c:	71fb      	strb	r3, [r7, #7]
	NVIC->NVIC_ISER[copy_eInterrupt/32]= 0b1 << copy_eInterrupt % 32 ;
 800020e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000212:	425a      	negs	r2, r3
 8000214:	f003 031f 	and.w	r3, r3, #31
 8000218:	f002 021f 	and.w	r2, r2, #31
 800021c:	bf58      	it	pl
 800021e:	4253      	negpl	r3, r2
 8000220:	b25b      	sxtb	r3, r3
 8000222:	461a      	mov	r2, r3
 8000224:	2301      	movs	r3, #1
 8000226:	fa03 f102 	lsl.w	r1, r3, r2
 800022a:	4a08      	ldr	r2, [pc, #32]	; (800024c <NVIC_vEnableInterrupt+0x48>)
 800022c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000230:	2b00      	cmp	r3, #0
 8000232:	da00      	bge.n	8000236 <NVIC_vEnableInterrupt+0x32>
 8000234:	331f      	adds	r3, #31
 8000236:	115b      	asrs	r3, r3, #5
 8000238:	b25b      	sxtb	r3, r3
 800023a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
}
 800023e:	bf00      	nop
 8000240:	370c      	adds	r7, #12
 8000242:	46bd      	mov	sp, r7
 8000244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000248:	4770      	bx	lr
 800024a:	bf00      	nop
 800024c:	e000e100 	.word	0xe000e100

08000250 <NVIC_vSetPendingFlag>:
void NVIC_vDisableInterrupt(Interrupt_t copy_eInterrupt)
{
	NVIC->NVIC_ICER[copy_eInterrupt/32]= 0b1 << copy_eInterrupt % 32 ;
}
void NVIC_vSetPendingFlag(Interrupt_t copy_eInterrupt)
{
 8000250:	b480      	push	{r7}
 8000252:	b083      	sub	sp, #12
 8000254:	af00      	add	r7, sp, #0
 8000256:	4603      	mov	r3, r0
 8000258:	71fb      	strb	r3, [r7, #7]
	NVIC->NVIC_ISPR[copy_eInterrupt/32]= 0b1 << copy_eInterrupt % 32 ;
 800025a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800025e:	425a      	negs	r2, r3
 8000260:	f003 031f 	and.w	r3, r3, #31
 8000264:	f002 021f 	and.w	r2, r2, #31
 8000268:	bf58      	it	pl
 800026a:	4253      	negpl	r3, r2
 800026c:	b25b      	sxtb	r3, r3
 800026e:	461a      	mov	r2, r3
 8000270:	2301      	movs	r3, #1
 8000272:	fa03 f102 	lsl.w	r1, r3, r2
 8000276:	4a08      	ldr	r2, [pc, #32]	; (8000298 <NVIC_vSetPendingFlag+0x48>)
 8000278:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800027c:	2b00      	cmp	r3, #0
 800027e:	da00      	bge.n	8000282 <NVIC_vSetPendingFlag+0x32>
 8000280:	331f      	adds	r3, #31
 8000282:	115b      	asrs	r3, r3, #5
 8000284:	b25b      	sxtb	r3, r3
 8000286:	3340      	adds	r3, #64	; 0x40
 8000288:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

}
 800028c:	bf00      	nop
 800028e:	370c      	adds	r7, #12
 8000290:	46bd      	mov	sp, r7
 8000292:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000296:	4770      	bx	lr
 8000298:	e000e100 	.word	0xe000e100

0800029c <SysTick_Handler>:

STK_Callback_t Global_SysTickCallback;
Interval_t Global_Interval;

void SysTick_Handler(void)
{
 800029c:	b580      	push	{r7, lr}
 800029e:	af00      	add	r7, sp, #0
	if (Global_Interval == Interval_Single)
 80002a0:	4b09      	ldr	r3, [pc, #36]	; (80002c8 <SysTick_Handler+0x2c>)
 80002a2:	781b      	ldrb	r3, [r3, #0]
 80002a4:	2b00      	cmp	r3, #0
 80002a6:	d105      	bne.n	80002b4 <SysTick_Handler+0x18>
	{
		//disable counter
		CLEAR_BIT(STK->STK_CTRL,ENABLE);
 80002a8:	4b08      	ldr	r3, [pc, #32]	; (80002cc <SysTick_Handler+0x30>)
 80002aa:	681b      	ldr	r3, [r3, #0]
 80002ac:	4a07      	ldr	r2, [pc, #28]	; (80002cc <SysTick_Handler+0x30>)
 80002ae:	f023 0301 	bic.w	r3, r3, #1
 80002b2:	6013      	str	r3, [r2, #0]
	}
	if (Global_SysTickCallback != 0)
 80002b4:	4b06      	ldr	r3, [pc, #24]	; (80002d0 <SysTick_Handler+0x34>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d002      	beq.n	80002c2 <SysTick_Handler+0x26>
	{
		Global_SysTickCallback();
 80002bc:	4b04      	ldr	r3, [pc, #16]	; (80002d0 <SysTick_Handler+0x34>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	4798      	blx	r3
	}
}
 80002c2:	bf00      	nop
 80002c4:	bd80      	pop	{r7, pc}
 80002c6:	bf00      	nop
 80002c8:	20000020 	.word	0x20000020
 80002cc:	e000e010 	.word	0xe000e010
 80002d0:	2000001c 	.word	0x2000001c

080002d4 <EXTI1_IRQHandler>:

#include <stdint.h>

#include "NVIC_int.h"
void EXTI1_IRQHandler(void)
{
 80002d4:	b480      	push	{r7}
 80002d6:	af00      	add	r7, sp, #0

}
 80002d8:	bf00      	nop
 80002da:	46bd      	mov	sp, r7
 80002dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e0:	4770      	bx	lr

080002e2 <EXTI0_IRQHandler>:
void EXTI0_IRQHandler(void)
{
 80002e2:	b480      	push	{r7}
 80002e4:	af00      	add	r7, sp, #0


}
 80002e6:	bf00      	nop
 80002e8:	46bd      	mov	sp, r7
 80002ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ee:	4770      	bx	lr

080002f0 <main>:
int main(void)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	af00      	add	r7, sp, #0
	 NVIC_vSetPendingFlag(EXTI0);
 80002f4:	2006      	movs	r0, #6
 80002f6:	f7ff ffab 	bl	8000250 <NVIC_vSetPendingFlag>
	 NVIC_vEnableInterrupt(EXTI0);
 80002fa:	2006      	movs	r0, #6
 80002fc:	f7ff ff82 	bl	8000204 <NVIC_vEnableInterrupt>


    /* Loop forever */
	for(;;);
 8000300:	e7fe      	b.n	8000300 <main+0x10>
	...

08000304 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000304:	480d      	ldr	r0, [pc, #52]	; (800033c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000306:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000308:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800030c:	480c      	ldr	r0, [pc, #48]	; (8000340 <LoopForever+0x6>)
  ldr r1, =_edata
 800030e:	490d      	ldr	r1, [pc, #52]	; (8000344 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000310:	4a0d      	ldr	r2, [pc, #52]	; (8000348 <LoopForever+0xe>)
  movs r3, #0
 8000312:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000314:	e002      	b.n	800031c <LoopCopyDataInit>

08000316 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000316:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000318:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800031a:	3304      	adds	r3, #4

0800031c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800031c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800031e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000320:	d3f9      	bcc.n	8000316 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000322:	4a0a      	ldr	r2, [pc, #40]	; (800034c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000324:	4c0a      	ldr	r4, [pc, #40]	; (8000350 <LoopForever+0x16>)
  movs r3, #0
 8000326:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000328:	e001      	b.n	800032e <LoopFillZerobss>

0800032a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800032a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800032c:	3204      	adds	r2, #4

0800032e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800032e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000330:	d3fb      	bcc.n	800032a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000332:	f000 f811 	bl	8000358 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000336:	f7ff ffdb 	bl	80002f0 <main>

0800033a <LoopForever>:

LoopForever:
  b LoopForever
 800033a:	e7fe      	b.n	800033a <LoopForever>
  ldr   r0, =_estack
 800033c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000340:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000344:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000348:	080003c0 	.word	0x080003c0
  ldr r2, =_sbss
 800034c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000350:	20000024 	.word	0x20000024

08000354 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000354:	e7fe      	b.n	8000354 <ADC_IRQHandler>
	...

08000358 <__libc_init_array>:
 8000358:	b570      	push	{r4, r5, r6, lr}
 800035a:	4d0d      	ldr	r5, [pc, #52]	; (8000390 <__libc_init_array+0x38>)
 800035c:	4c0d      	ldr	r4, [pc, #52]	; (8000394 <__libc_init_array+0x3c>)
 800035e:	1b64      	subs	r4, r4, r5
 8000360:	10a4      	asrs	r4, r4, #2
 8000362:	2600      	movs	r6, #0
 8000364:	42a6      	cmp	r6, r4
 8000366:	d109      	bne.n	800037c <__libc_init_array+0x24>
 8000368:	4d0b      	ldr	r5, [pc, #44]	; (8000398 <__libc_init_array+0x40>)
 800036a:	4c0c      	ldr	r4, [pc, #48]	; (800039c <__libc_init_array+0x44>)
 800036c:	f000 f818 	bl	80003a0 <_init>
 8000370:	1b64      	subs	r4, r4, r5
 8000372:	10a4      	asrs	r4, r4, #2
 8000374:	2600      	movs	r6, #0
 8000376:	42a6      	cmp	r6, r4
 8000378:	d105      	bne.n	8000386 <__libc_init_array+0x2e>
 800037a:	bd70      	pop	{r4, r5, r6, pc}
 800037c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000380:	4798      	blx	r3
 8000382:	3601      	adds	r6, #1
 8000384:	e7ee      	b.n	8000364 <__libc_init_array+0xc>
 8000386:	f855 3b04 	ldr.w	r3, [r5], #4
 800038a:	4798      	blx	r3
 800038c:	3601      	adds	r6, #1
 800038e:	e7f2      	b.n	8000376 <__libc_init_array+0x1e>
 8000390:	080003b8 	.word	0x080003b8
 8000394:	080003b8 	.word	0x080003b8
 8000398:	080003b8 	.word	0x080003b8
 800039c:	080003bc 	.word	0x080003bc

080003a0 <_init>:
 80003a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003a2:	bf00      	nop
 80003a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003a6:	bc08      	pop	{r3}
 80003a8:	469e      	mov	lr, r3
 80003aa:	4770      	bx	lr

080003ac <_fini>:
 80003ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003ae:	bf00      	nop
 80003b0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003b2:	bc08      	pop	{r3}
 80003b4:	469e      	mov	lr, r3
 80003b6:	4770      	bx	lr
